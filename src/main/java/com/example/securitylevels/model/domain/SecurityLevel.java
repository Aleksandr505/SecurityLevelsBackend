package com.example.securitylevels.model.domain;

public enum SecurityLevel {
    A1("1а", "Обнаружены угрозы I типа; система обрабатывает специальные, биометрические или иные чувствительные категории ПД"),
    B1("1б", "Обнаружены угрозы II типа; обработка специальных ПД превышает 100 тысяч субъектов"),
    A2("2а", "Угрозы I типа при работе с общедоступными персональными данными"),
    B2("2б", "Угрозы II типа; обработка специальных ПД в объёме до 100 тысяч человек либо данных сотрудников оператора"),
    V2("2в", "Угрозы II типа при работе с биометрическими персональными данными"),
    G2("2г", "Угрозы II типа и обработка общедоступных ПД более 100 тысяч субъектов, не включая сотрудников оператора"),
    D2("2д", "Угрозы II типа при обработке прочих категорий ПД численностью более 100 тысяч человек, кроме работников оператора"),
    E2("2е", "Угрозы III типа; обработка специальных ПД свыше 100 тысяч субъектов (без учёта персонала оператора)"),
    A3("3а", "Угрозы II типа при работе с общедоступными ПД численностью до 100 тысяч субъектов"),
    B3("3б", "Угрозы II типа при обработке прочих категорий ПД в объёме до 100 тысяч человек"),
    V3("3в", "Угрозы III типа при обработке специальных ПД до 100 тысяч субъектов"),
    G3("3г", "Угрозы III типа при работе с биометрическими персональными данными"),
    D3("3д", "Угрозы III типа при обработке прочих категорий ПД численностью свыше 100 тысяч человек (за исключением сотрудников оператора)"),
    A4("4а", "Угрозы III типа при работе с открытыми и общедоступными персональными данными"),
    B4("4б", "Угрозы III типа при обработке иных категорий ПД в объёме менее 100 тысяч субъектов");


    private final String code;
    private final String reason;

    SecurityLevel(String code, String reason) {
        this.code = code;
        this.reason = reason;
    }

    public String getCode() {
        return code;
    }

    public String getReason() {
        return reason;
    }

    public int getPriority() {
        // Приоритет равен числу из кода
        return Integer.parseInt(code.substring(0, 1));
    }
}
